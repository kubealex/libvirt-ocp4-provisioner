---
- name: This play installs needed tools to provision infrastructure VMs
  hosts: vm_host
  vars_files:
    - vars/sno_vars.yml
  become: true
  tasks:

    - name: Install needed packages
      ansible.builtin.yum:
        name: "{{ virtualization_packages.rhel }}"
        state: latest
      when:
        - ansible_distribution == 'RedHat'

    - name: Install needed packages
      ansible.builtin.yum:
        name: "{{ virtualization_packages.centos8 }}"
        state: latest
      when:
        - ansible_distribution == 'CentOS'
        - ansible_distribution_major_version | int == 8

    - name: Install needed packages
      ansible.builtin.yum:
        name: "{{ virtualization_packages.centos7 }}"
        state: latest
      when:
        - ansible_distribution == 'CentOS'
        - ansible_distribution_major_version | int == 7

    - name: Install needed packages
      ansible.builtin.yum:
        name: "{{ virtualization_packages.fedora }}"
        state: latest
      when:
        - ansible_distribution == 'Fedora'

    - name: Download and provision Terraform
      ansible.builtin.unarchive:
        src: "{{ terraform_release_url }}"
        dest: /usr/bin/
        mode: 755
        remote_src: yes

    - name: Ensure libvirtd is running
      ansible.builtin.service: 
        name: libvirtd
        state: started
        enabled: true

    - name: Ensure libvirt can use root as user
      ansible.builtin.replace:
        path: /etc/libvirt/qemu.conf
        regexp: "{{ item.regexp }}"
        replace: "{{ item.line }}"
      loop:
        - regexp: '#user = "root"'
          line: 'user = "root"'
        - regexp: '#group = "root"'
          line: 'group = "root"'

    - name: Restart libvirtd service
      ansible.builtin.service: 
        name: libvirtd
        state: restarted

    - name: Use TF project to ensure pool and network are defined
      community.general.terraform:
        project_path: "{{ workspace_directory.base_path }}/{{ cluster.name }}/terraform/libvirt-resources"
        variables:
          domain: "{{ cluster.name }}.{{ domain }}"
          network_cidr: ' ["{{ network_cidr }}"]'
          cluster_name: "{{ cluster.name }}"
        force_init: true
        state: present
      become: true
