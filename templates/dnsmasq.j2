## External dns ##

server={{ hostvars['bastion']['host_ip'] | ansible.utils.ipsubnet(24) | ansible.utils.ipaddr('net') | ansible.utils.ipmath(1) }}

## External dns end ##

## Bastion ##

address=/{{ hostvars['bastion']['host_fqdn'] }}/{{ hostvars['bastion']['host_ip'] }}
dhcp-host={{ hostvars['bastion']['host_mac'] }},{{ hostvars['bastion']['host_ip'] }}

## Bastion end ##

## LoadBalancer ##

address=/{{ hostvars['loadbalancer']['host_fqdn'] }}/{{ hostvars['loadbalancer']['host_ip'] }}
dhcp-host={{ hostvars['loadbalancer']['host_mac'] }},{{ hostvars['loadbalancer']['host_ip'] }}

## LoadBalancer end ##

## Required fqdn and wildcard for OCP ##

address=/{{ hostvars['loadbalancer']['host_api_fqdn'] }}/{{ hostvars['loadbalancer']['host_ip'] }}
address=/{{ hostvars['loadbalancer']['host_apps_fqdn'] }}/{{ hostvars['loadbalancer']['host_ip'] }}
address=/{{ hostvars['loadbalancer']['host_api_int_fqdn'] }}/{{ hostvars['loadbalancer']['host_ip'] }}

## Required fqdn and wildcard for OCP end ##

## Bootstrap ##

{% for node in groups['bootstrap'] %}
address=/{{ hostvars[node].node_fqdn }}/{{ hostvars[node].node_ip }}
ptr-record={{ hostvars[node].node_reversedns[:-1] }},{{ hostvars[node].node_fqdn }}
dhcp-host={{ hostvars[node].node_mac }},{{  hostvars[node].node_ip }}
{%endfor%}

## Bootstrap end ##

## Etcd ##

{% for node in groups['masters'] %}
address=/{{ hostvars[node].etcd_fqdn }}/{{ hostvars[node].etcd_ip }}
{%endfor%}

## Etcd  end ##

## Masters ##
{% for node in groups['masters'] %}
address=/{{ hostvars[node].node_fqdn }}/{{ hostvars[node].node_ip }}
ptr-record={{ hostvars[node].node_reversedns[:-1] }},{{ hostvars[node].node_fqdn }}
dhcp-host={{ hostvars[node].node_mac }},{{  hostvars[node].node_ip }}
{%endfor%}

## Masters end ##

{% if not three_node %}
## Workers ##
{% for node in groups['workers'] %}
address=/{{ hostvars[node].node_fqdn }}/{{ hostvars[node].node_ip }}
ptr-record={{ hostvars[node].node_reversedns[:-1] }},{{ hostvars[node].node_fqdn }}
dhcp-host={{ hostvars[node].node_mac }},{{  hostvars[node].node_ip }}
{%endfor%}

## Workers end ##
{%endif%}

## SRV records for etcd service. Priority must be 0 and Weight must be 10 ###

{% for node in groups['masters'] %}
srv-host=_etcd-server-ssl._tcp.{{ hostvars['bastion'].ocp_domain }},{{ hostvars[node].etcd_fqdn }},2380,0,10
{%endfor%}

## SRV records end ##

## PXE ##

enable-tftp
tftp-root={{ tftp_boot_root }},{{ hostvars['bastion'].host_interface }}
dhcp-boot=pxelinux.0

## PXE end ##

## DHCP ##

dhcp-option=101,"{{ hostvars['bastion'].timezone }}"
domain={{ hostvars['bastion'].ocp_domain }}
interface={{ hostvars['bastion'].host_interface }}
dhcp-option={{ hostvars['bastion'].host_interface }},3,{{ hostvars['bastion'].host_ip | ansible.utils.ipsubnet(24) | ansible.utils.ipaddr('net') | ansible.utils.ipmath(1) }}
dhcp-option=option:netmask,{{ hostvars['bastion'].host_ip | ansible.utils.ipsubnet(24) | ansible.utils.ipaddr('netmask') }}
dhcp-option=option:dns-server,{{ hostvars['bastion'].host_ip }}
dhcp-option=option:ntp-server,{{ hostvars['bastion'].ntp_server }}
dhcp-range={{ hostvars['bastion'].host_interface }},{{ hostvars['bastion'].host_ip | ansible.utils.ipmath(1) }},{{ hostvars['bastion'].host_ip | ansible.utils.ipsubnet(24)  | ansible.utils.ipaddr('last_usable') }},12h

## DHCP end ##

